// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geo.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	geo.proto

It has these top-level messages:
	Address
	Point
	Devices
	ResearchArea
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Address struct {
	Address       string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	AddressNumber string `protobuf:"bytes,2,opt,name=addressNumber" json:"addressNumber,omitempty"`
	PostalCode    string `protobuf:"bytes,3,opt,name=postalCode" json:"postalCode,omitempty"`
	Place         string `protobuf:"bytes,4,opt,name=place" json:"place,omitempty"`
	Country       string `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto1.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetAddressNumber() string {
	if m != nil {
		return m.AddressNumber
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type Point struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	GeoHash   string  `protobuf:"bytes,3,opt,name=geoHash" json:"geoHash,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto1.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Point) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Point) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Point) GetGeoHash() string {
	if m != nil {
		return m.GeoHash
	}
	return ""
}

type Devices struct {
	Expopushtoken []string `protobuf:"bytes,1,rep,name=expopushtoken" json:"expopushtoken,omitempty"`
}

func (m *Devices) Reset()                    { *m = Devices{} }
func (m *Devices) String() string            { return proto1.CompactTextString(m) }
func (*Devices) ProtoMessage()               {}
func (*Devices) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Devices) GetExpopushtoken() []string {
	if m != nil {
		return m.Expopushtoken
	}
	return nil
}

type ResearchArea struct {
	Point     *Point `protobuf:"bytes,1,opt,name=point" json:"point,omitempty"`
	Precision int32  `protobuf:"varint,2,opt,name=precision" json:"precision,omitempty"`
}

func (m *ResearchArea) Reset()                    { *m = ResearchArea{} }
func (m *ResearchArea) String() string            { return proto1.CompactTextString(m) }
func (*ResearchArea) ProtoMessage()               {}
func (*ResearchArea) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResearchArea) GetPoint() *Point {
	if m != nil {
		return m.Point
	}
	return nil
}

func (m *ResearchArea) GetPrecision() int32 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func init() {
	proto1.RegisterType((*Address)(nil), "proto.Address")
	proto1.RegisterType((*Point)(nil), "proto.Point")
	proto1.RegisterType((*Devices)(nil), "proto.Devices")
	proto1.RegisterType((*ResearchArea)(nil), "proto.ResearchArea")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GeoService service

type GeoServiceClient interface {
	// Get an address and return a Point
	GetPoint(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Point, error)
	// Get the list of devices that must be notified
	GetDeviceList(ctx context.Context, in *ResearchArea, opts ...grpc.CallOption) (*Devices, error)
}

type geoServiceClient struct {
	cc *grpc.ClientConn
}

func NewGeoServiceClient(cc *grpc.ClientConn) GeoServiceClient {
	return &geoServiceClient{cc}
}

func (c *geoServiceClient) GetPoint(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := grpc.Invoke(ctx, "/proto.GeoService/GetPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geoServiceClient) GetDeviceList(ctx context.Context, in *ResearchArea, opts ...grpc.CallOption) (*Devices, error) {
	out := new(Devices)
	err := grpc.Invoke(ctx, "/proto.GeoService/GetDeviceList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GeoService service

type GeoServiceServer interface {
	// Get an address and return a Point
	GetPoint(context.Context, *Address) (*Point, error)
	// Get the list of devices that must be notified
	GetDeviceList(context.Context, *ResearchArea) (*Devices, error)
}

func RegisterGeoServiceServer(s *grpc.Server, srv GeoServiceServer) {
	s.RegisterService(&_GeoService_serviceDesc, srv)
}

func _GeoService_GetPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoServiceServer).GetPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GeoService/GetPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoServiceServer).GetPoint(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeoService_GetDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResearchArea)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoServiceServer).GetDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GeoService/GetDeviceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoServiceServer).GetDeviceList(ctx, req.(*ResearchArea))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.GeoService",
	HandlerType: (*GeoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPoint",
			Handler:    _GeoService_GetPoint_Handler,
		},
		{
			MethodName: "GetDeviceList",
			Handler:    _GeoService_GetDeviceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "geo.proto",
}

func init() { proto1.RegisterFile("geo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0x3b, 0xed, 0x37, 0x5f, 0xdb, 0x6b, 0xeb, 0x22, 0xba, 0x08, 0x45, 0xa4, 0x04, 0x17,
	0xe2, 0xa2, 0x42, 0x05, 0xf7, 0x45, 0xa1, 0x2e, 0x44, 0xca, 0xb8, 0x74, 0x95, 0xce, 0x5c, 0xda,
	0xe0, 0x38, 0x37, 0x24, 0x19, 0xd1, 0x47, 0xf1, 0x6d, 0x25, 0x7f, 0x6a, 0xdb, 0xd5, 0xe4, 0x9c,
	0x13, 0xee, 0xfd, 0x9d, 0x09, 0x0c, 0x37, 0x48, 0x33, 0x6d, 0xc8, 0x11, 0xcb, 0xc3, 0x47, 0xfc,
	0x64, 0xd0, 0x5f, 0x54, 0x95, 0x41, 0x6b, 0x19, 0x87, 0xbe, 0x8c, 0x47, 0x9e, 0x4d, 0xb3, 0xeb,
	0x61, 0xb1, 0x93, 0xec, 0x0a, 0xc6, 0xe9, 0xf8, 0xd2, 0x7e, 0xac, 0xd1, 0xf0, 0x6e, 0xc8, 0x8f,
	0x4d, 0x76, 0x09, 0xa0, 0xc9, 0x3a, 0x59, 0x3f, 0x50, 0x85, 0xbc, 0x17, 0xae, 0x1c, 0x38, 0xec,
	0x1c, 0x72, 0x5d, 0xcb, 0x12, 0xf9, 0xbf, 0x10, 0x45, 0xe1, 0xb7, 0x96, 0xd4, 0x36, 0xce, 0x7c,
	0xf3, 0x3c, 0x6e, 0x4d, 0x52, 0xbc, 0x41, 0xbe, 0x22, 0xd5, 0x38, 0x36, 0x81, 0x41, 0x2d, 0x9d,
	0x72, 0x6d, 0x85, 0x81, 0xac, 0x5b, 0xfc, 0x69, 0x76, 0x01, 0xc3, 0x9a, 0x9a, 0x4d, 0x0c, 0xbb,
	0x21, 0xdc, 0x1b, 0x7e, 0xf8, 0x06, 0xe9, 0x49, 0xda, 0x6d, 0xe2, 0xd9, 0x49, 0x71, 0x0b, 0xfd,
	0x47, 0xfc, 0x54, 0x25, 0x86, 0x76, 0xf8, 0xa5, 0x49, 0xb7, 0x76, 0xeb, 0xe8, 0x1d, 0x1b, 0x9e,
	0x4d, 0x7b, 0xbe, 0xdd, 0x91, 0x29, 0x56, 0x30, 0x2a, 0xd0, 0xa2, 0x34, 0xe5, 0x76, 0x61, 0x50,
	0x32, 0x01, 0xb9, 0xf6, 0x74, 0x81, 0xe8, 0x64, 0x3e, 0x8a, 0xff, 0x75, 0x16, 0x88, 0x8b, 0x18,
	0x79, 0x38, 0x6d, 0xb0, 0x54, 0x56, 0x51, 0x13, 0xe0, 0xf2, 0x62, 0x6f, 0xcc, 0x35, 0xc0, 0x12,
	0xe9, 0x15, 0x8d, 0xc7, 0x60, 0x37, 0x30, 0x58, 0xa2, 0x8b, 0x85, 0x4f, 0xd3, 0xb0, 0xf4, 0x32,
	0x93, 0xa3, 0xe1, 0xa2, 0xc3, 0xee, 0x61, 0xbc, 0x44, 0x17, 0xf9, 0x9f, 0x95, 0x75, 0xec, 0x2c,
	0x5d, 0x38, 0x24, 0x9c, 0xec, 0xa6, 0xa4, 0x9e, 0xa2, 0xb3, 0xfe, 0x1f, 0x8c, 0xbb, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x80, 0xf8, 0x17, 0x14, 0x08, 0x02, 0x00, 0x00,
}
